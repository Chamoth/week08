name: CD — Deploy to AKS (dev/prod)

on:
  push:
    branches: [ dev, main ]
    paths:
      - "k8s/**"
      - "backend/**"
      - "frontend/**"
      - ".github/workflows/cd.yaml"
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (dev or prod)"
        required: true
        default: "dev"

permissions:
  contents: read
  id-token: write

concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: true

env:
  ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
  AKS_RG: ${{ vars.AKS_RG }}
  AKS_NAME: ${{ vars.AKS_NAME }}
  K8S_NAMESPACE: ${{ vars.K8S_NAMESPACE }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    # Map branch → environment: main → prod, dev → dev, manual → input
    environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || (github.ref_name == 'main' && 'prod' || 'dev') }}

    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set AKS context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ env.AKS_RG }}
          cluster-name: ${{ env.AKS_NAME }}

      - name: Ensure namespace exists
        run: |
          kubectl get ns ${{ env.K8S_NAMESPACE }} || kubectl create ns ${{ env.K8S_NAMESPACE }}

      - name: Calculate image tags (immutable)
        id: img
        run: |
          SHA="${GITHUB_SHA}"
          echo "prod=${{ env.ACR_LOGIN_SERVER }}/product-service:${SHA}" >> $GITHUB_OUTPUT
          echo "ord=${{ env.ACR_LOGIN_SERVER }}/order-service:${SHA}"   >> $GITHUB_OUTPUT
          echo "fe=${{ env.ACR_LOGIN_SERVER }}/frontend:${SHA}"        >> $GITHUB_OUTPUT

      - name: Apply K8s manifests
        run: |
          kubectl -n ${{ env.K8S_NAMESPACE }} apply -f k8s/

      - name: Show current deployments (debug)
        run: |
          kubectl -n ${{ env.K8S_NAMESPACE }} get deploy -o wide

      # IMPORTANT: use your ACTUAL deployment and container names
      - name: Update images to immutable tags
        run: |
          kubectl -n ${{ env.K8S_NAMESPACE }} set image deploy/product-service-w08e1 product-service-container=${{ steps.img.outputs.prod }}
          kubectl -n ${{ env.K8S_NAMESPACE }} set image deploy/order-service-w08e1   order-service-container=${{ steps.img.outputs.ord }}
          kubectl -n ${{ env.K8S_NAMESPACE }} set image deploy/frontend              frontend-container=${{ steps.img.outputs.fe }}

      - name: Annotate change cause (optional)
        run: |
          kubectl -n ${{ env.K8S_NAMESPACE }} annotate deploy/product-service-w08e1 kubernetes.io/change-cause="Deploy $GITHUB_SHA" --overwrite
          kubectl -n ${{ env.K8S_NAMESPACE }} annotate deploy/order-service-w08e1   kubernetes.io/change-cause="Deploy $GITHUB_SHA" --overwrite
          kubectl -n ${{ env.K8S_NAMESPACE }} annotate deploy/frontend              kubernetes.io/change-cause="Deploy $GITHUB_SHA" --overwrite

      - name: Skip rollout wait (dev only)
        if: ${{ github.ref_name != 'main' }}
        run: echo "Skipping rollout wait on dev."